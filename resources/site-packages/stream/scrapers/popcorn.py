from stream import plugin
from stream.scrapers import scraper
from stream.ga import tracked
from stream.caching import cached_route, shelf
from stream.utils import ensure_fanart
from stream.library import library_context


BASE_URL = "%s/" % "http://api.popcorntime.io"
HEADERS = {
    "Referer": BASE_URL,
}
SHOW_LIST_CACHE_TTL = 24 * 3600 # 24 hours caching

@scraper("Popcorn Time TV")
@cached_route(ttl=SHOW_LIST_CACHE_TTL, content_type="tvshows")
@plugin.route("/poptv")
#@tracked
def popcorn_index():
    import json
    from stream.utils import url_get


    with shelf("popcorn.shows") as popcorn_shows:
        #print popcorn_shows
        if not popcorn_shows:
            pages = json.loads( url_get("%sshows" % BASE_URL, headers=HEADERS) )
            popcorn_shows['shows'] = []
            for page in pages:
                print "%s%s" % (BASE_URL,page)
                response = url_get("%s%s" % (BASE_URL,page), headers=HEADERS)
                if response=="": continue
                page_shows = json.loads(response)
                for show in page_shows:
                    popcorn_shows['shows'].append( {
                        "label": show['title'],
                        "icon": show['images']['poster'],
                        "thumbnail": show['images']['poster'],
                        "path": plugin.url_for("popcorn_get_show", show_id=show['_id'] ),
                        "is_playable":False,
                        'properties': {'fanart_image': show['images']['fanart'] }
                    } )
    #print popcorn_shows
    return popcorn_shows['shows']

@plugin.route("/poptv/show/<show_id>")
@library_context
@ensure_fanart
#@tracked
def popcorn_get_show(show_id):
    import json
    from stream.utils import url_get

    response = url_get("%sshow/%s" % (BASE_URL,show_id), headers=HEADERS)
    show = json.loads(response)
    #print show
    items = []
    for episode in show['episodes']:
        item={}
        item["info"]={}
        item["info"]["tvshowtitle"]= show['title']
        item["info"]["title"]= episode["title"]
        item["info"]["season"]= episode["season"]
        item["info"]["episode"]= episode["episode"]
        item["info"]["premiered"]= episode["first_aired"]
        item["icon"]= show['images']['poster']
        item["thumbnail"]= show['images']['poster']
        item['label'] = "S%02dE%02d %s" % (episode['season'], episode['episode'], episode["title"])
        item["info"]['orden'] = 100 * episode['season'] + episode['episode']

        item["path"]= plugin.url_for("play", uri=episode['torrents']['0']['url'])
        item["stream_info"]= {"video": {"video": 'x264'} }
        item["is_playable"]= True

        item['properties'] = {}
        item['properties']['fanart_image'] = show['images']['fanart']
        items.append(item)
    return sorted(items, key=lambda a: a['info']['orden'] )
